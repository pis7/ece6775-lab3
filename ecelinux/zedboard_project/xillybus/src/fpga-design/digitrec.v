// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module digitrec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [48:0] input_V;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] training_data_V_0_address0;
reg    training_data_V_0_ce0;
wire   [45:0] training_data_V_0_q0;
wire   [10:0] training_data_V_1_address0;
reg    training_data_V_1_ce0;
wire   [45:0] training_data_V_1_q0;
wire   [10:0] training_data_V_2_address0;
reg    training_data_V_2_ce0;
wire   [46:0] training_data_V_2_q0;
wire   [10:0] training_data_V_3_address0;
reg    training_data_V_3_ce0;
wire   [46:0] training_data_V_3_q0;
wire   [10:0] training_data_V_4_address0;
reg    training_data_V_4_ce0;
wire   [45:0] training_data_V_4_q0;
wire   [10:0] training_data_V_5_address0;
reg    training_data_V_5_ce0;
wire   [44:0] training_data_V_5_q0;
wire   [10:0] training_data_V_6_address0;
reg    training_data_V_6_ce0;
wire   [47:0] training_data_V_6_q0;
wire   [10:0] training_data_V_7_address0;
reg    training_data_V_7_ce0;
wire   [41:0] training_data_V_7_q0;
wire   [10:0] training_data_V_8_address0;
reg    training_data_V_8_ce0;
wire   [44:0] training_data_V_8_q0;
wire   [10:0] training_data_V_9_address0;
reg    training_data_V_9_ce0;
wire   [40:0] training_data_V_9_q0;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_1011_p2;
reg   [3:0] i_reg_2137;
wire   [1:0] k_fu_1023_p2;
reg   [1:0] k_reg_2145;
wire    ap_CS_fsm_state3;
wire   [10:0] i_4_fu_1605_p2;
reg   [10:0] i_4_reg_2153;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln57_fu_1599_p2;
wire   [47:0] zext_ln63_fu_1625_p1;
reg   [47:0] zext_ln63_reg_2208;
wire    ap_CS_fsm_state6;
wire   [47:0] zext_ln63_1_fu_1630_p1;
reg   [47:0] zext_ln63_1_reg_2213;
wire   [47:0] zext_ln63_2_fu_1635_p1;
reg   [47:0] zext_ln63_2_reg_2218;
wire   [47:0] zext_ln63_3_fu_1640_p1;
reg   [47:0] zext_ln63_3_reg_2223;
wire   [47:0] zext_ln63_4_fu_1645_p1;
reg   [47:0] zext_ln63_4_reg_2228;
wire   [47:0] zext_ln63_5_fu_1650_p1;
reg   [47:0] zext_ln63_5_reg_2233;
reg   [47:0] training_data_V_6_lo_reg_2238;
wire   [47:0] zext_ln63_6_fu_1655_p1;
reg   [47:0] zext_ln63_6_reg_2243;
wire   [47:0] zext_ln63_7_fu_1660_p1;
reg   [47:0] zext_ln63_7_reg_2248;
wire   [47:0] zext_ln63_8_fu_1665_p1;
reg   [47:0] zext_ln63_8_reg_2253;
wire    ap_CS_fsm_state7;
wire    grp_update_knn_fu_734_ap_ready;
wire    grp_update_knn_fu_734_ap_done;
wire    grp_update_knn_fu_752_ap_ready;
wire    grp_update_knn_fu_752_ap_done;
wire    grp_update_knn_fu_770_ap_ready;
wire    grp_update_knn_fu_770_ap_done;
wire    grp_update_knn_fu_788_ap_ready;
wire    grp_update_knn_fu_788_ap_done;
wire    grp_update_knn_fu_806_ap_ready;
wire    grp_update_knn_fu_806_ap_done;
wire    grp_update_knn_fu_824_ap_ready;
wire    grp_update_knn_fu_824_ap_done;
wire    grp_update_knn_fu_842_ap_ready;
wire    grp_update_knn_fu_842_ap_done;
wire    grp_update_knn_fu_861_ap_ready;
wire    grp_update_knn_fu_861_ap_done;
wire    grp_update_knn_fu_879_ap_ready;
wire    grp_update_knn_fu_879_ap_done;
wire    grp_update_knn_fu_897_ap_ready;
wire    grp_update_knn_fu_897_ap_done;
reg    ap_block_state7_on_subcall_done;
wire    grp_knn_vote_fu_670_ap_start;
wire    grp_knn_vote_fu_670_ap_done;
wire    grp_knn_vote_fu_670_ap_idle;
wire    grp_knn_vote_fu_670_ap_ready;
wire   [3:0] grp_knn_vote_fu_670_ap_return;
wire    grp_update_knn_fu_734_ap_start;
wire    grp_update_knn_fu_734_ap_idle;
wire   [5:0] grp_update_knn_fu_734_ap_return_0;
wire   [5:0] grp_update_knn_fu_734_ap_return_1;
wire   [5:0] grp_update_knn_fu_734_ap_return_2;
wire    grp_update_knn_fu_752_ap_start;
wire    grp_update_knn_fu_752_ap_idle;
wire   [5:0] grp_update_knn_fu_752_ap_return_0;
wire   [5:0] grp_update_knn_fu_752_ap_return_1;
wire   [5:0] grp_update_knn_fu_752_ap_return_2;
wire    grp_update_knn_fu_770_ap_start;
wire    grp_update_knn_fu_770_ap_idle;
wire   [5:0] grp_update_knn_fu_770_ap_return_0;
wire   [5:0] grp_update_knn_fu_770_ap_return_1;
wire   [5:0] grp_update_knn_fu_770_ap_return_2;
wire    grp_update_knn_fu_788_ap_start;
wire    grp_update_knn_fu_788_ap_idle;
wire   [5:0] grp_update_knn_fu_788_ap_return_0;
wire   [5:0] grp_update_knn_fu_788_ap_return_1;
wire   [5:0] grp_update_knn_fu_788_ap_return_2;
wire    grp_update_knn_fu_806_ap_start;
wire    grp_update_knn_fu_806_ap_idle;
wire   [5:0] grp_update_knn_fu_806_ap_return_0;
wire   [5:0] grp_update_knn_fu_806_ap_return_1;
wire   [5:0] grp_update_knn_fu_806_ap_return_2;
wire    grp_update_knn_fu_824_ap_start;
wire    grp_update_knn_fu_824_ap_idle;
wire   [5:0] grp_update_knn_fu_824_ap_return_0;
wire   [5:0] grp_update_knn_fu_824_ap_return_1;
wire   [5:0] grp_update_knn_fu_824_ap_return_2;
wire    grp_update_knn_fu_842_ap_start;
wire    grp_update_knn_fu_842_ap_idle;
wire   [5:0] grp_update_knn_fu_842_ap_return_0;
wire   [5:0] grp_update_knn_fu_842_ap_return_1;
wire   [5:0] grp_update_knn_fu_842_ap_return_2;
wire    grp_update_knn_fu_861_ap_start;
wire    grp_update_knn_fu_861_ap_idle;
wire   [5:0] grp_update_knn_fu_861_ap_return_0;
wire   [5:0] grp_update_knn_fu_861_ap_return_1;
wire   [5:0] grp_update_knn_fu_861_ap_return_2;
wire    grp_update_knn_fu_879_ap_start;
wire    grp_update_knn_fu_879_ap_idle;
wire   [5:0] grp_update_knn_fu_879_ap_return_0;
wire   [5:0] grp_update_knn_fu_879_ap_return_1;
wire   [5:0] grp_update_knn_fu_879_ap_return_2;
wire    grp_update_knn_fu_897_ap_start;
wire    grp_update_knn_fu_897_ap_idle;
wire   [5:0] grp_update_knn_fu_897_ap_return_0;
wire   [5:0] grp_update_knn_fu_897_ap_return_1;
wire   [5:0] grp_update_knn_fu_897_ap_return_2;
reg   [3:0] i_0_reg_336;
wire   [0:0] icmp_ln52_fu_1017_p2;
reg   [1:0] k_0_reg_348;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln51_fu_1005_p2;
reg   [5:0] knn_set_9_2_V_3_reg_359;
reg   [5:0] knn_set_9_1_V_3_reg_369;
reg   [5:0] knn_set_9_0_V_3_reg_379;
reg   [5:0] knn_set_8_2_V_3_reg_389;
reg   [5:0] knn_set_8_1_V_3_reg_399;
reg   [5:0] knn_set_8_0_V_3_reg_409;
reg   [5:0] knn_set_7_2_V_3_reg_419;
reg   [5:0] knn_set_7_1_V_3_reg_429;
reg   [5:0] knn_set_7_0_V_3_reg_439;
reg   [5:0] knn_set_6_2_V_3_reg_449;
reg   [5:0] knn_set_6_1_V_3_reg_459;
reg   [5:0] knn_set_6_0_V_3_reg_469;
reg   [5:0] knn_set_5_2_V_3_reg_479;
reg   [5:0] knn_set_5_1_V_3_reg_489;
reg   [5:0] knn_set_5_0_V_3_reg_499;
reg   [5:0] knn_set_4_2_V_3_reg_509;
reg   [5:0] knn_set_4_1_V_3_reg_519;
reg   [5:0] knn_set_4_0_V_3_reg_529;
reg   [5:0] knn_set_3_2_V_3_reg_539;
reg   [5:0] knn_set_3_1_V_3_reg_549;
reg   [5:0] knn_set_3_0_V_3_reg_559;
reg   [5:0] knn_set_2_2_V_3_reg_569;
reg   [5:0] knn_set_2_1_V_3_reg_579;
reg   [5:0] knn_set_2_0_V_3_reg_589;
reg   [5:0] knn_set_1_2_V_3_reg_599;
reg   [5:0] knn_set_1_1_V_3_reg_609;
reg   [5:0] knn_set_1_0_V_3_reg_619;
reg   [5:0] knn_set_0_2_V_3_reg_629;
reg   [5:0] knn_set_0_1_V_3_reg_639;
reg   [5:0] knn_set_0_0_V_3_reg_649;
reg   [10:0] i4_0_reg_659;
reg    grp_knn_vote_fu_670_ap_start_reg;
wire    ap_CS_fsm_state8;
reg    grp_update_knn_fu_734_ap_start_reg;
reg    grp_update_knn_fu_752_ap_start_reg;
reg    grp_update_knn_fu_770_ap_start_reg;
reg    grp_update_knn_fu_788_ap_start_reg;
reg    grp_update_knn_fu_806_ap_start_reg;
reg    grp_update_knn_fu_824_ap_start_reg;
reg    grp_update_knn_fu_842_ap_start_reg;
reg    grp_update_knn_fu_861_ap_start_reg;
reg    grp_update_knn_fu_879_ap_start_reg;
reg    grp_update_knn_fu_897_ap_start_reg;
wire   [63:0] zext_ln61_fu_1611_p1;
reg   [5:0] knn_set_0_0_V_0_fu_80;
wire   [5:0] knn_set_0_0_V_4_fu_1485_p6;
reg   [5:0] knn_set_0_1_V_0_fu_84;
wire   [5:0] knn_set_0_1_V_4_fu_1499_p6;
reg   [5:0] knn_set_0_2_V_0_fu_88;
wire   [5:0] knn_set_0_2_V_4_fu_1513_p6;
reg   [5:0] knn_set_1_0_V_0_fu_92;
wire   [5:0] knn_set_1_0_V_4_fu_1428_p6;
reg   [5:0] knn_set_1_1_V_0_fu_96;
wire   [5:0] knn_set_1_1_V_4_fu_1442_p6;
reg   [5:0] knn_set_1_2_V_0_fu_100;
wire   [5:0] knn_set_1_2_V_4_fu_1456_p6;
reg   [5:0] knn_set_2_0_V_0_fu_104;
wire   [5:0] knn_set_2_0_V_4_fu_1371_p6;
reg   [5:0] knn_set_2_1_V_0_fu_108;
wire   [5:0] knn_set_2_1_V_4_fu_1385_p6;
reg   [5:0] knn_set_2_2_V_0_fu_112;
wire   [5:0] knn_set_2_2_V_4_fu_1399_p6;
reg   [5:0] knn_set_3_0_V_0_fu_116;
wire   [5:0] knn_set_3_0_V_4_fu_1314_p6;
reg   [5:0] knn_set_3_1_V_0_fu_120;
wire   [5:0] knn_set_3_1_V_4_fu_1328_p6;
reg   [5:0] knn_set_3_2_V_0_fu_124;
wire   [5:0] knn_set_3_2_V_4_fu_1342_p6;
reg   [5:0] knn_set_4_0_V_0_fu_128;
wire   [5:0] knn_set_4_0_V_4_fu_1257_p6;
reg   [5:0] knn_set_4_1_V_0_fu_132;
wire   [5:0] knn_set_4_1_V_4_fu_1271_p6;
reg   [5:0] knn_set_4_2_V_0_fu_136;
wire   [5:0] knn_set_4_2_V_4_fu_1285_p6;
reg   [5:0] knn_set_5_0_V_0_fu_140;
wire   [5:0] knn_set_5_0_V_4_fu_1200_p6;
reg   [5:0] knn_set_5_1_V_0_fu_144;
wire   [5:0] knn_set_5_1_V_4_fu_1214_p6;
reg   [5:0] knn_set_5_2_V_0_fu_148;
wire   [5:0] knn_set_5_2_V_4_fu_1228_p6;
reg   [5:0] knn_set_6_0_V_0_fu_152;
wire   [5:0] knn_set_6_0_V_4_fu_1143_p6;
reg   [5:0] knn_set_6_1_V_0_fu_156;
wire   [5:0] knn_set_6_1_V_4_fu_1157_p6;
reg   [5:0] knn_set_6_2_V_0_fu_160;
wire   [5:0] knn_set_6_2_V_4_fu_1171_p6;
reg   [5:0] knn_set_7_0_V_0_fu_164;
wire   [5:0] knn_set_7_0_V_4_fu_1086_p6;
reg   [5:0] knn_set_7_1_V_0_fu_168;
wire   [5:0] knn_set_7_1_V_4_fu_1100_p6;
reg   [5:0] knn_set_7_2_V_0_fu_172;
wire   [5:0] knn_set_7_2_V_4_fu_1114_p6;
reg   [5:0] knn_set_8_0_V_0_fu_176;
wire   [5:0] knn_set_8_0_V_4_fu_1029_p6;
reg   [5:0] knn_set_8_1_V_0_fu_180;
wire   [5:0] knn_set_8_1_V_4_fu_1043_p6;
reg   [5:0] knn_set_8_2_V_0_fu_184;
wire   [5:0] knn_set_8_2_V_4_fu_1057_p6;
reg   [5:0] knn_set_9_0_V_0_fu_188;
wire   [5:0] knn_set_9_0_V_4_fu_1542_p6;
reg   [5:0] knn_set_9_1_V_0_fu_192;
wire   [5:0] knn_set_9_1_V_4_fu_1556_p6;
reg   [5:0] knn_set_9_2_V_0_fu_196;
wire   [5:0] knn_set_9_2_V_4_fu_1570_p6;
reg   [3:0] ap_return_preg;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_knn_vote_fu_670_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_734_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_752_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_770_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_788_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_806_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_824_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_842_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_861_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_879_ap_start_reg = 1'b0;
#0 grp_update_knn_fu_897_ap_start_reg = 1'b0;
#0 ap_return_preg = 4'd0;
end

digitrec_trainingdEe #(
    .DataWidth( 46 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_0_address0),
    .ce0(training_data_V_0_ce0),
    .q0(training_data_V_0_q0)
);

digitrec_trainingeOg #(
    .DataWidth( 46 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_1_address0),
    .ce0(training_data_V_1_ce0),
    .q0(training_data_V_1_q0)
);

digitrec_trainingfYi #(
    .DataWidth( 47 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_2_address0),
    .ce0(training_data_V_2_ce0),
    .q0(training_data_V_2_q0)
);

digitrec_trainingg8j #(
    .DataWidth( 47 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_3_address0),
    .ce0(training_data_V_3_ce0),
    .q0(training_data_V_3_q0)
);

digitrec_traininghbi #(
    .DataWidth( 46 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_4_address0),
    .ce0(training_data_V_4_ce0),
    .q0(training_data_V_4_q0)
);

digitrec_trainingibs #(
    .DataWidth( 45 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_5_address0),
    .ce0(training_data_V_5_ce0),
    .q0(training_data_V_5_q0)
);

digitrec_trainingjbC #(
    .DataWidth( 48 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_6_address0),
    .ce0(training_data_V_6_ce0),
    .q0(training_data_V_6_q0)
);

digitrec_trainingkbM #(
    .DataWidth( 42 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_7_address0),
    .ce0(training_data_V_7_ce0),
    .q0(training_data_V_7_q0)
);

digitrec_traininglbW #(
    .DataWidth( 45 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_8_address0),
    .ce0(training_data_V_8_ce0),
    .q0(training_data_V_8_q0)
);

digitrec_trainingmb6 #(
    .DataWidth( 41 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
training_data_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_9_address0),
    .ce0(training_data_V_9_ce0),
    .q0(training_data_V_9_q0)
);

knn_vote grp_knn_vote_fu_670(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_knn_vote_fu_670_ap_start),
    .ap_done(grp_knn_vote_fu_670_ap_done),
    .ap_idle(grp_knn_vote_fu_670_ap_idle),
    .ap_ready(grp_knn_vote_fu_670_ap_ready),
    .knn_set_0_0_V_read(knn_set_0_0_V_3_reg_649),
    .knn_set_0_1_V_read(knn_set_0_1_V_3_reg_639),
    .knn_set_0_2_V_read(knn_set_0_2_V_3_reg_629),
    .knn_set_1_0_V_read(knn_set_1_0_V_3_reg_619),
    .knn_set_1_1_V_read(knn_set_1_1_V_3_reg_609),
    .knn_set_1_2_V_read(knn_set_1_2_V_3_reg_599),
    .knn_set_2_0_V_read(knn_set_2_0_V_3_reg_589),
    .knn_set_2_1_V_read(knn_set_2_1_V_3_reg_579),
    .knn_set_2_2_V_read(knn_set_2_2_V_3_reg_569),
    .knn_set_3_0_V_read(knn_set_3_0_V_3_reg_559),
    .knn_set_3_1_V_read(knn_set_3_1_V_3_reg_549),
    .knn_set_3_2_V_read(knn_set_3_2_V_3_reg_539),
    .knn_set_4_0_V_read(knn_set_4_0_V_3_reg_529),
    .knn_set_4_1_V_read(knn_set_4_1_V_3_reg_519),
    .knn_set_4_2_V_read(knn_set_4_2_V_3_reg_509),
    .knn_set_5_0_V_read(knn_set_5_0_V_3_reg_499),
    .knn_set_5_1_V_read(knn_set_5_1_V_3_reg_489),
    .knn_set_5_2_V_read(knn_set_5_2_V_3_reg_479),
    .knn_set_6_0_V_read(knn_set_6_0_V_3_reg_469),
    .knn_set_6_1_V_read(knn_set_6_1_V_3_reg_459),
    .knn_set_6_2_V_read(knn_set_6_2_V_3_reg_449),
    .knn_set_7_0_V_read(knn_set_7_0_V_3_reg_439),
    .knn_set_7_1_V_read(knn_set_7_1_V_3_reg_429),
    .knn_set_7_2_V_read(knn_set_7_2_V_3_reg_419),
    .knn_set_8_0_V_read(knn_set_8_0_V_3_reg_409),
    .knn_set_8_1_V_read(knn_set_8_1_V_3_reg_399),
    .knn_set_8_2_V_read(knn_set_8_2_V_3_reg_389),
    .knn_set_9_0_V_read(knn_set_9_0_V_3_reg_379),
    .knn_set_9_1_V_read(knn_set_9_1_V_3_reg_369),
    .knn_set_9_2_V_read(knn_set_9_2_V_3_reg_359),
    .ap_return(grp_knn_vote_fu_670_ap_return)
);

update_knn grp_update_knn_fu_734(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_734_ap_start),
    .ap_done(grp_update_knn_fu_734_ap_done),
    .ap_idle(grp_update_knn_fu_734_ap_idle),
    .ap_ready(grp_update_knn_fu_734_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_reg_2208),
    .min_distances_0_V_r_2(knn_set_0_0_V_3_reg_649),
    .min_distances_0_V_r(knn_set_0_0_V_3_reg_649),
    .min_distances_1_V_r_2(knn_set_0_1_V_3_reg_639),
    .min_distances_1_V_r(knn_set_0_1_V_3_reg_639),
    .min_distances_2_V_r_2(knn_set_0_2_V_3_reg_629),
    .min_distances_2_V_r(knn_set_0_2_V_3_reg_629),
    .ap_return_0(grp_update_knn_fu_734_ap_return_0),
    .ap_return_1(grp_update_knn_fu_734_ap_return_1),
    .ap_return_2(grp_update_knn_fu_734_ap_return_2)
);

update_knn grp_update_knn_fu_752(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_752_ap_start),
    .ap_done(grp_update_knn_fu_752_ap_done),
    .ap_idle(grp_update_knn_fu_752_ap_idle),
    .ap_ready(grp_update_knn_fu_752_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_1_reg_2213),
    .min_distances_0_V_r_2(knn_set_1_0_V_3_reg_619),
    .min_distances_0_V_r(knn_set_1_0_V_3_reg_619),
    .min_distances_1_V_r_2(knn_set_1_1_V_3_reg_609),
    .min_distances_1_V_r(knn_set_1_1_V_3_reg_609),
    .min_distances_2_V_r_2(knn_set_1_2_V_3_reg_599),
    .min_distances_2_V_r(knn_set_1_2_V_3_reg_599),
    .ap_return_0(grp_update_knn_fu_752_ap_return_0),
    .ap_return_1(grp_update_knn_fu_752_ap_return_1),
    .ap_return_2(grp_update_knn_fu_752_ap_return_2)
);

update_knn grp_update_knn_fu_770(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_770_ap_start),
    .ap_done(grp_update_knn_fu_770_ap_done),
    .ap_idle(grp_update_knn_fu_770_ap_idle),
    .ap_ready(grp_update_knn_fu_770_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_2_reg_2218),
    .min_distances_0_V_r_2(knn_set_2_0_V_3_reg_589),
    .min_distances_0_V_r(knn_set_2_0_V_3_reg_589),
    .min_distances_1_V_r_2(knn_set_2_1_V_3_reg_579),
    .min_distances_1_V_r(knn_set_2_1_V_3_reg_579),
    .min_distances_2_V_r_2(knn_set_2_2_V_3_reg_569),
    .min_distances_2_V_r(knn_set_2_2_V_3_reg_569),
    .ap_return_0(grp_update_knn_fu_770_ap_return_0),
    .ap_return_1(grp_update_knn_fu_770_ap_return_1),
    .ap_return_2(grp_update_knn_fu_770_ap_return_2)
);

update_knn grp_update_knn_fu_788(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_788_ap_start),
    .ap_done(grp_update_knn_fu_788_ap_done),
    .ap_idle(grp_update_knn_fu_788_ap_idle),
    .ap_ready(grp_update_knn_fu_788_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_3_reg_2223),
    .min_distances_0_V_r_2(knn_set_3_0_V_3_reg_559),
    .min_distances_0_V_r(knn_set_3_0_V_3_reg_559),
    .min_distances_1_V_r_2(knn_set_3_1_V_3_reg_549),
    .min_distances_1_V_r(knn_set_3_1_V_3_reg_549),
    .min_distances_2_V_r_2(knn_set_3_2_V_3_reg_539),
    .min_distances_2_V_r(knn_set_3_2_V_3_reg_539),
    .ap_return_0(grp_update_knn_fu_788_ap_return_0),
    .ap_return_1(grp_update_knn_fu_788_ap_return_1),
    .ap_return_2(grp_update_knn_fu_788_ap_return_2)
);

update_knn grp_update_knn_fu_806(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_806_ap_start),
    .ap_done(grp_update_knn_fu_806_ap_done),
    .ap_idle(grp_update_knn_fu_806_ap_idle),
    .ap_ready(grp_update_knn_fu_806_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_4_reg_2228),
    .min_distances_0_V_r_2(knn_set_4_0_V_3_reg_529),
    .min_distances_0_V_r(knn_set_4_0_V_3_reg_529),
    .min_distances_1_V_r_2(knn_set_4_1_V_3_reg_519),
    .min_distances_1_V_r(knn_set_4_1_V_3_reg_519),
    .min_distances_2_V_r_2(knn_set_4_2_V_3_reg_509),
    .min_distances_2_V_r(knn_set_4_2_V_3_reg_509),
    .ap_return_0(grp_update_knn_fu_806_ap_return_0),
    .ap_return_1(grp_update_knn_fu_806_ap_return_1),
    .ap_return_2(grp_update_knn_fu_806_ap_return_2)
);

update_knn grp_update_knn_fu_824(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_824_ap_start),
    .ap_done(grp_update_knn_fu_824_ap_done),
    .ap_idle(grp_update_knn_fu_824_ap_idle),
    .ap_ready(grp_update_knn_fu_824_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_5_reg_2233),
    .min_distances_0_V_r_2(knn_set_5_0_V_3_reg_499),
    .min_distances_0_V_r(knn_set_5_0_V_3_reg_499),
    .min_distances_1_V_r_2(knn_set_5_1_V_3_reg_489),
    .min_distances_1_V_r(knn_set_5_1_V_3_reg_489),
    .min_distances_2_V_r_2(knn_set_5_2_V_3_reg_479),
    .min_distances_2_V_r(knn_set_5_2_V_3_reg_479),
    .ap_return_0(grp_update_knn_fu_824_ap_return_0),
    .ap_return_1(grp_update_knn_fu_824_ap_return_1),
    .ap_return_2(grp_update_knn_fu_824_ap_return_2)
);

update_knn grp_update_knn_fu_842(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_842_ap_start),
    .ap_done(grp_update_knn_fu_842_ap_done),
    .ap_idle(grp_update_knn_fu_842_ap_idle),
    .ap_ready(grp_update_knn_fu_842_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(training_data_V_6_lo_reg_2238),
    .min_distances_0_V_r_2(knn_set_6_0_V_3_reg_469),
    .min_distances_0_V_r(knn_set_6_0_V_3_reg_469),
    .min_distances_1_V_r_2(knn_set_6_1_V_3_reg_459),
    .min_distances_1_V_r(knn_set_6_1_V_3_reg_459),
    .min_distances_2_V_r_2(knn_set_6_2_V_3_reg_449),
    .min_distances_2_V_r(knn_set_6_2_V_3_reg_449),
    .ap_return_0(grp_update_knn_fu_842_ap_return_0),
    .ap_return_1(grp_update_knn_fu_842_ap_return_1),
    .ap_return_2(grp_update_knn_fu_842_ap_return_2)
);

update_knn grp_update_knn_fu_861(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_861_ap_start),
    .ap_done(grp_update_knn_fu_861_ap_done),
    .ap_idle(grp_update_knn_fu_861_ap_idle),
    .ap_ready(grp_update_knn_fu_861_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_6_reg_2243),
    .min_distances_0_V_r_2(knn_set_7_0_V_3_reg_439),
    .min_distances_0_V_r(knn_set_7_0_V_3_reg_439),
    .min_distances_1_V_r_2(knn_set_7_1_V_3_reg_429),
    .min_distances_1_V_r(knn_set_7_1_V_3_reg_429),
    .min_distances_2_V_r_2(knn_set_7_2_V_3_reg_419),
    .min_distances_2_V_r(knn_set_7_2_V_3_reg_419),
    .ap_return_0(grp_update_knn_fu_861_ap_return_0),
    .ap_return_1(grp_update_knn_fu_861_ap_return_1),
    .ap_return_2(grp_update_knn_fu_861_ap_return_2)
);

update_knn grp_update_knn_fu_879(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_879_ap_start),
    .ap_done(grp_update_knn_fu_879_ap_done),
    .ap_idle(grp_update_knn_fu_879_ap_idle),
    .ap_ready(grp_update_knn_fu_879_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_7_reg_2248),
    .min_distances_0_V_r_2(knn_set_8_0_V_3_reg_409),
    .min_distances_0_V_r(knn_set_8_0_V_3_reg_409),
    .min_distances_1_V_r_2(knn_set_8_1_V_3_reg_399),
    .min_distances_1_V_r(knn_set_8_1_V_3_reg_399),
    .min_distances_2_V_r_2(knn_set_8_2_V_3_reg_389),
    .min_distances_2_V_r(knn_set_8_2_V_3_reg_389),
    .ap_return_0(grp_update_knn_fu_879_ap_return_0),
    .ap_return_1(grp_update_knn_fu_879_ap_return_1),
    .ap_return_2(grp_update_knn_fu_879_ap_return_2)
);

update_knn grp_update_knn_fu_897(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_update_knn_fu_897_ap_start),
    .ap_done(grp_update_knn_fu_897_ap_done),
    .ap_idle(grp_update_knn_fu_897_ap_idle),
    .ap_ready(grp_update_knn_fu_897_ap_ready),
    .test_inst_V(input_V),
    .train_inst_V(zext_ln63_8_reg_2253),
    .min_distances_0_V_r_2(knn_set_9_0_V_3_reg_379),
    .min_distances_0_V_r(knn_set_9_0_V_3_reg_379),
    .min_distances_1_V_r_2(knn_set_9_1_V_3_reg_369),
    .min_distances_1_V_r(knn_set_9_1_V_3_reg_369),
    .min_distances_2_V_r_2(knn_set_9_2_V_3_reg_359),
    .min_distances_2_V_r(knn_set_9_2_V_3_reg_359),
    .ap_return_0(grp_update_knn_fu_897_ap_return_0),
    .ap_return_1(grp_update_knn_fu_897_ap_return_1),
    .ap_return_2(grp_update_knn_fu_897_ap_return_2)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U87(
    .din0(6'd50),
    .din1(knn_set_8_0_V_0_fu_176),
    .din2(knn_set_8_0_V_0_fu_176),
    .din3(knn_set_8_0_V_0_fu_176),
    .din4(k_0_reg_348),
    .dout(knn_set_8_0_V_4_fu_1029_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U88(
    .din0(knn_set_8_1_V_0_fu_180),
    .din1(6'd50),
    .din2(knn_set_8_1_V_0_fu_180),
    .din3(knn_set_8_1_V_0_fu_180),
    .din4(k_0_reg_348),
    .dout(knn_set_8_1_V_4_fu_1043_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U89(
    .din0(knn_set_8_2_V_0_fu_184),
    .din1(knn_set_8_2_V_0_fu_184),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_8_2_V_4_fu_1057_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U90(
    .din0(6'd50),
    .din1(knn_set_7_0_V_0_fu_164),
    .din2(knn_set_7_0_V_0_fu_164),
    .din3(knn_set_7_0_V_0_fu_164),
    .din4(k_0_reg_348),
    .dout(knn_set_7_0_V_4_fu_1086_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U91(
    .din0(knn_set_7_1_V_0_fu_168),
    .din1(6'd50),
    .din2(knn_set_7_1_V_0_fu_168),
    .din3(knn_set_7_1_V_0_fu_168),
    .din4(k_0_reg_348),
    .dout(knn_set_7_1_V_4_fu_1100_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U92(
    .din0(knn_set_7_2_V_0_fu_172),
    .din1(knn_set_7_2_V_0_fu_172),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_7_2_V_4_fu_1114_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U93(
    .din0(6'd50),
    .din1(knn_set_6_0_V_0_fu_152),
    .din2(knn_set_6_0_V_0_fu_152),
    .din3(knn_set_6_0_V_0_fu_152),
    .din4(k_0_reg_348),
    .dout(knn_set_6_0_V_4_fu_1143_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U94(
    .din0(knn_set_6_1_V_0_fu_156),
    .din1(6'd50),
    .din2(knn_set_6_1_V_0_fu_156),
    .din3(knn_set_6_1_V_0_fu_156),
    .din4(k_0_reg_348),
    .dout(knn_set_6_1_V_4_fu_1157_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U95(
    .din0(knn_set_6_2_V_0_fu_160),
    .din1(knn_set_6_2_V_0_fu_160),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_6_2_V_4_fu_1171_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U96(
    .din0(6'd50),
    .din1(knn_set_5_0_V_0_fu_140),
    .din2(knn_set_5_0_V_0_fu_140),
    .din3(knn_set_5_0_V_0_fu_140),
    .din4(k_0_reg_348),
    .dout(knn_set_5_0_V_4_fu_1200_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U97(
    .din0(knn_set_5_1_V_0_fu_144),
    .din1(6'd50),
    .din2(knn_set_5_1_V_0_fu_144),
    .din3(knn_set_5_1_V_0_fu_144),
    .din4(k_0_reg_348),
    .dout(knn_set_5_1_V_4_fu_1214_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U98(
    .din0(knn_set_5_2_V_0_fu_148),
    .din1(knn_set_5_2_V_0_fu_148),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_5_2_V_4_fu_1228_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U99(
    .din0(6'd50),
    .din1(knn_set_4_0_V_0_fu_128),
    .din2(knn_set_4_0_V_0_fu_128),
    .din3(knn_set_4_0_V_0_fu_128),
    .din4(k_0_reg_348),
    .dout(knn_set_4_0_V_4_fu_1257_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U100(
    .din0(knn_set_4_1_V_0_fu_132),
    .din1(6'd50),
    .din2(knn_set_4_1_V_0_fu_132),
    .din3(knn_set_4_1_V_0_fu_132),
    .din4(k_0_reg_348),
    .dout(knn_set_4_1_V_4_fu_1271_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U101(
    .din0(knn_set_4_2_V_0_fu_136),
    .din1(knn_set_4_2_V_0_fu_136),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_4_2_V_4_fu_1285_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U102(
    .din0(6'd50),
    .din1(knn_set_3_0_V_0_fu_116),
    .din2(knn_set_3_0_V_0_fu_116),
    .din3(knn_set_3_0_V_0_fu_116),
    .din4(k_0_reg_348),
    .dout(knn_set_3_0_V_4_fu_1314_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U103(
    .din0(knn_set_3_1_V_0_fu_120),
    .din1(6'd50),
    .din2(knn_set_3_1_V_0_fu_120),
    .din3(knn_set_3_1_V_0_fu_120),
    .din4(k_0_reg_348),
    .dout(knn_set_3_1_V_4_fu_1328_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U104(
    .din0(knn_set_3_2_V_0_fu_124),
    .din1(knn_set_3_2_V_0_fu_124),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_3_2_V_4_fu_1342_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U105(
    .din0(6'd50),
    .din1(knn_set_2_0_V_0_fu_104),
    .din2(knn_set_2_0_V_0_fu_104),
    .din3(knn_set_2_0_V_0_fu_104),
    .din4(k_0_reg_348),
    .dout(knn_set_2_0_V_4_fu_1371_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U106(
    .din0(knn_set_2_1_V_0_fu_108),
    .din1(6'd50),
    .din2(knn_set_2_1_V_0_fu_108),
    .din3(knn_set_2_1_V_0_fu_108),
    .din4(k_0_reg_348),
    .dout(knn_set_2_1_V_4_fu_1385_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U107(
    .din0(knn_set_2_2_V_0_fu_112),
    .din1(knn_set_2_2_V_0_fu_112),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_2_2_V_4_fu_1399_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U108(
    .din0(6'd50),
    .din1(knn_set_1_0_V_0_fu_92),
    .din2(knn_set_1_0_V_0_fu_92),
    .din3(knn_set_1_0_V_0_fu_92),
    .din4(k_0_reg_348),
    .dout(knn_set_1_0_V_4_fu_1428_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U109(
    .din0(knn_set_1_1_V_0_fu_96),
    .din1(6'd50),
    .din2(knn_set_1_1_V_0_fu_96),
    .din3(knn_set_1_1_V_0_fu_96),
    .din4(k_0_reg_348),
    .dout(knn_set_1_1_V_4_fu_1442_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U110(
    .din0(knn_set_1_2_V_0_fu_100),
    .din1(knn_set_1_2_V_0_fu_100),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_1_2_V_4_fu_1456_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U111(
    .din0(6'd50),
    .din1(knn_set_0_0_V_0_fu_80),
    .din2(knn_set_0_0_V_0_fu_80),
    .din3(knn_set_0_0_V_0_fu_80),
    .din4(k_0_reg_348),
    .dout(knn_set_0_0_V_4_fu_1485_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U112(
    .din0(knn_set_0_1_V_0_fu_84),
    .din1(6'd50),
    .din2(knn_set_0_1_V_0_fu_84),
    .din3(knn_set_0_1_V_0_fu_84),
    .din4(k_0_reg_348),
    .dout(knn_set_0_1_V_4_fu_1499_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U113(
    .din0(knn_set_0_2_V_0_fu_88),
    .din1(knn_set_0_2_V_0_fu_88),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_0_2_V_4_fu_1513_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U114(
    .din0(6'd50),
    .din1(knn_set_9_0_V_0_fu_188),
    .din2(knn_set_9_0_V_0_fu_188),
    .din3(knn_set_9_0_V_0_fu_188),
    .din4(k_0_reg_348),
    .dout(knn_set_9_0_V_4_fu_1542_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U115(
    .din0(knn_set_9_1_V_0_fu_192),
    .din1(6'd50),
    .din2(knn_set_9_1_V_0_fu_192),
    .din3(knn_set_9_1_V_0_fu_192),
    .din4(k_0_reg_348),
    .dout(knn_set_9_1_V_4_fu_1556_p6)
);

dut_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
dut_mux_42_6_1_1_U116(
    .din0(knn_set_9_2_V_0_fu_196),
    .din1(knn_set_9_2_V_0_fu_196),
    .din2(6'd50),
    .din3(6'd50),
    .din4(k_0_reg_348),
    .dout(knn_set_9_2_V_4_fu_1570_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if (((grp_knn_vote_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_return_preg <= grp_knn_vote_fu_670_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_knn_vote_fu_670_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln57_fu_1599_p2 == 1'd1))) begin
            grp_knn_vote_fu_670_ap_start_reg <= 1'b1;
        end else if ((grp_knn_vote_fu_670_ap_ready == 1'b1)) begin
            grp_knn_vote_fu_670_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_734_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_734_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_734_ap_ready == 1'b1)) begin
            grp_update_knn_fu_734_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_752_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_752_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_752_ap_ready == 1'b1)) begin
            grp_update_knn_fu_752_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_770_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_770_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_770_ap_ready == 1'b1)) begin
            grp_update_knn_fu_770_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_788_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_788_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_788_ap_ready == 1'b1)) begin
            grp_update_knn_fu_788_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_806_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_806_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_806_ap_ready == 1'b1)) begin
            grp_update_knn_fu_806_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_824_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_824_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_824_ap_ready == 1'b1)) begin
            grp_update_knn_fu_824_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_842_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_842_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_842_ap_ready == 1'b1)) begin
            grp_update_knn_fu_842_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_861_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_861_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_861_ap_ready == 1'b1)) begin
            grp_update_knn_fu_861_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_879_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_879_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_879_ap_ready == 1'b1)) begin
            grp_update_knn_fu_879_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_update_knn_fu_897_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_update_knn_fu_897_ap_start_reg <= 1'b1;
        end else if ((grp_update_knn_fu_897_ap_ready == 1'b1)) begin
            grp_update_knn_fu_897_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i4_0_reg_659 <= 11'd0;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        i4_0_reg_659 <= i_4_reg_2153;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_1017_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_336 <= i_reg_2137;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_336 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln51_fu_1005_p2 == 1'd0))) begin
        k_0_reg_348 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        k_0_reg_348 <= k_reg_2145;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_0_V_3_reg_649 <= knn_set_0_0_V_0_fu_80;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_0_0_V_3_reg_649 <= grp_update_knn_fu_734_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_1_V_3_reg_639 <= knn_set_0_1_V_0_fu_84;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_0_1_V_3_reg_639 <= grp_update_knn_fu_734_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_0_2_V_3_reg_629 <= knn_set_0_2_V_0_fu_88;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_0_2_V_3_reg_629 <= grp_update_knn_fu_734_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_0_V_3_reg_619 <= knn_set_1_0_V_0_fu_92;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_1_0_V_3_reg_619 <= grp_update_knn_fu_752_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_1_V_3_reg_609 <= knn_set_1_1_V_0_fu_96;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_1_1_V_3_reg_609 <= grp_update_knn_fu_752_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_1_2_V_3_reg_599 <= knn_set_1_2_V_0_fu_100;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_1_2_V_3_reg_599 <= grp_update_knn_fu_752_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_0_V_3_reg_589 <= knn_set_2_0_V_0_fu_104;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_2_0_V_3_reg_589 <= grp_update_knn_fu_770_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_1_V_3_reg_579 <= knn_set_2_1_V_0_fu_108;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_2_1_V_3_reg_579 <= grp_update_knn_fu_770_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_2_2_V_3_reg_569 <= knn_set_2_2_V_0_fu_112;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_2_2_V_3_reg_569 <= grp_update_knn_fu_770_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_3_0_V_3_reg_559 <= knn_set_3_0_V_0_fu_116;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_3_0_V_3_reg_559 <= grp_update_knn_fu_788_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_3_1_V_3_reg_549 <= knn_set_3_1_V_0_fu_120;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_3_1_V_3_reg_549 <= grp_update_knn_fu_788_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_3_2_V_3_reg_539 <= knn_set_3_2_V_0_fu_124;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_3_2_V_3_reg_539 <= grp_update_knn_fu_788_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_4_0_V_3_reg_529 <= knn_set_4_0_V_0_fu_128;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_4_0_V_3_reg_529 <= grp_update_knn_fu_806_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_4_1_V_3_reg_519 <= knn_set_4_1_V_0_fu_132;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_4_1_V_3_reg_519 <= grp_update_knn_fu_806_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_4_2_V_3_reg_509 <= knn_set_4_2_V_0_fu_136;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_4_2_V_3_reg_509 <= grp_update_knn_fu_806_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_5_0_V_3_reg_499 <= knn_set_5_0_V_0_fu_140;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_5_0_V_3_reg_499 <= grp_update_knn_fu_824_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_5_1_V_3_reg_489 <= knn_set_5_1_V_0_fu_144;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_5_1_V_3_reg_489 <= grp_update_knn_fu_824_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_5_2_V_3_reg_479 <= knn_set_5_2_V_0_fu_148;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_5_2_V_3_reg_479 <= grp_update_knn_fu_824_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_6_0_V_3_reg_469 <= knn_set_6_0_V_0_fu_152;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_6_0_V_3_reg_469 <= grp_update_knn_fu_842_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_6_1_V_3_reg_459 <= knn_set_6_1_V_0_fu_156;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_6_1_V_3_reg_459 <= grp_update_knn_fu_842_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_6_2_V_3_reg_449 <= knn_set_6_2_V_0_fu_160;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_6_2_V_3_reg_449 <= grp_update_knn_fu_842_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_7_0_V_3_reg_439 <= knn_set_7_0_V_0_fu_164;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_7_0_V_3_reg_439 <= grp_update_knn_fu_861_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_7_1_V_3_reg_429 <= knn_set_7_1_V_0_fu_168;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_7_1_V_3_reg_429 <= grp_update_knn_fu_861_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_7_2_V_3_reg_419 <= knn_set_7_2_V_0_fu_172;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_7_2_V_3_reg_419 <= grp_update_knn_fu_861_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_8_0_V_3_reg_409 <= knn_set_8_0_V_0_fu_176;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_8_0_V_3_reg_409 <= grp_update_knn_fu_879_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_8_1_V_3_reg_399 <= knn_set_8_1_V_0_fu_180;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_8_1_V_3_reg_399 <= grp_update_knn_fu_879_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_8_2_V_3_reg_389 <= knn_set_8_2_V_0_fu_184;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_8_2_V_3_reg_389 <= grp_update_knn_fu_879_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_9_0_V_3_reg_379 <= knn_set_9_0_V_0_fu_188;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_9_0_V_3_reg_379 <= grp_update_knn_fu_897_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_9_1_V_3_reg_369 <= knn_set_9_1_V_0_fu_192;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_9_1_V_3_reg_369 <= grp_update_knn_fu_897_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        knn_set_9_2_V_3_reg_359 <= knn_set_9_2_V_0_fu_196;
    end else if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
        knn_set_9_2_V_3_reg_359 <= grp_update_knn_fu_897_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_4_reg_2153 <= i_4_fu_1605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2137 <= i_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_reg_2145 <= k_fu_1023_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_0_0_V_0_fu_80 <= knn_set_0_0_V_4_fu_1485_p6;
        knn_set_0_1_V_0_fu_84 <= knn_set_0_1_V_4_fu_1499_p6;
        knn_set_0_2_V_0_fu_88 <= knn_set_0_2_V_4_fu_1513_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd1) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_1_0_V_0_fu_92 <= knn_set_1_0_V_4_fu_1428_p6;
        knn_set_1_1_V_0_fu_96 <= knn_set_1_1_V_4_fu_1442_p6;
        knn_set_1_2_V_0_fu_100 <= knn_set_1_2_V_4_fu_1456_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_2_0_V_0_fu_104 <= knn_set_2_0_V_4_fu_1371_p6;
        knn_set_2_1_V_0_fu_108 <= knn_set_2_1_V_4_fu_1385_p6;
        knn_set_2_2_V_0_fu_112 <= knn_set_2_2_V_4_fu_1399_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd3) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_3_0_V_0_fu_116 <= knn_set_3_0_V_4_fu_1314_p6;
        knn_set_3_1_V_0_fu_120 <= knn_set_3_1_V_4_fu_1328_p6;
        knn_set_3_2_V_0_fu_124 <= knn_set_3_2_V_4_fu_1342_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd4) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_4_0_V_0_fu_128 <= knn_set_4_0_V_4_fu_1257_p6;
        knn_set_4_1_V_0_fu_132 <= knn_set_4_1_V_4_fu_1271_p6;
        knn_set_4_2_V_0_fu_136 <= knn_set_4_2_V_4_fu_1285_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd5) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_5_0_V_0_fu_140 <= knn_set_5_0_V_4_fu_1200_p6;
        knn_set_5_1_V_0_fu_144 <= knn_set_5_1_V_4_fu_1214_p6;
        knn_set_5_2_V_0_fu_148 <= knn_set_5_2_V_4_fu_1228_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd6) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_6_0_V_0_fu_152 <= knn_set_6_0_V_4_fu_1143_p6;
        knn_set_6_1_V_0_fu_156 <= knn_set_6_1_V_4_fu_1157_p6;
        knn_set_6_2_V_0_fu_160 <= knn_set_6_2_V_4_fu_1171_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd7) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_7_0_V_0_fu_164 <= knn_set_7_0_V_4_fu_1086_p6;
        knn_set_7_1_V_0_fu_168 <= knn_set_7_1_V_4_fu_1100_p6;
        knn_set_7_2_V_0_fu_172 <= knn_set_7_2_V_4_fu_1114_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_reg_336 == 4'd8) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_8_0_V_0_fu_176 <= knn_set_8_0_V_4_fu_1029_p6;
        knn_set_8_1_V_0_fu_180 <= knn_set_8_1_V_4_fu_1043_p6;
        knn_set_8_2_V_0_fu_184 <= knn_set_8_2_V_4_fu_1057_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_reg_336 == 4'd8) & ~(i_0_reg_336 == 4'd7) & ~(i_0_reg_336 == 4'd6) & ~(i_0_reg_336 == 4'd5) & ~(i_0_reg_336 == 4'd4) & ~(i_0_reg_336 == 4'd3) & ~(i_0_reg_336 == 4'd2) & ~(i_0_reg_336 == 4'd1) & ~(i_0_reg_336 == 4'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_1017_p2 == 1'd0))) begin
        knn_set_9_0_V_0_fu_188 <= knn_set_9_0_V_4_fu_1542_p6;
        knn_set_9_1_V_0_fu_192 <= knn_set_9_1_V_4_fu_1556_p6;
        knn_set_9_2_V_0_fu_196 <= knn_set_9_2_V_4_fu_1570_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        training_data_V_6_lo_reg_2238 <= training_data_V_6_q0;
        zext_ln63_1_reg_2213[45 : 0] <= zext_ln63_1_fu_1630_p1[45 : 0];
        zext_ln63_2_reg_2218[46 : 0] <= zext_ln63_2_fu_1635_p1[46 : 0];
        zext_ln63_3_reg_2223[46 : 0] <= zext_ln63_3_fu_1640_p1[46 : 0];
        zext_ln63_4_reg_2228[45 : 0] <= zext_ln63_4_fu_1645_p1[45 : 0];
        zext_ln63_5_reg_2233[44 : 0] <= zext_ln63_5_fu_1650_p1[44 : 0];
        zext_ln63_6_reg_2243[41 : 0] <= zext_ln63_6_fu_1655_p1[41 : 0];
        zext_ln63_7_reg_2248[44 : 0] <= zext_ln63_7_fu_1660_p1[44 : 0];
        zext_ln63_8_reg_2253[40 : 0] <= zext_ln63_8_fu_1665_p1[40 : 0];
        zext_ln63_reg_2208[45 : 0] <= zext_ln63_fu_1625_p1[45 : 0];
    end
end

always @ (*) begin
    if ((((grp_knn_vote_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_knn_vote_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_knn_vote_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_return = grp_knn_vote_fu_670_ap_return;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_0_ce0 = 1'b1;
    end else begin
        training_data_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_1_ce0 = 1'b1;
    end else begin
        training_data_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_2_ce0 = 1'b1;
    end else begin
        training_data_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_3_ce0 = 1'b1;
    end else begin
        training_data_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_4_ce0 = 1'b1;
    end else begin
        training_data_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_5_ce0 = 1'b1;
    end else begin
        training_data_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_6_ce0 = 1'b1;
    end else begin
        training_data_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_7_ce0 = 1'b1;
    end else begin
        training_data_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_8_ce0 = 1'b1;
    end else begin
        training_data_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_9_ce0 = 1'b1;
    end else begin
        training_data_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln51_fu_1005_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln52_fu_1017_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln57_fu_1599_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7_on_subcall_done) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((grp_knn_vote_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_update_knn_fu_897_ap_done == 1'b0) | (grp_update_knn_fu_879_ap_done == 1'b0) | (grp_update_knn_fu_861_ap_done == 1'b0) | (grp_update_knn_fu_842_ap_done == 1'b0) | (grp_update_knn_fu_824_ap_done == 1'b0) | (grp_update_knn_fu_806_ap_done == 1'b0) | (grp_update_knn_fu_788_ap_done == 1'b0) | (grp_update_knn_fu_770_ap_done == 1'b0) | (grp_update_knn_fu_752_ap_done == 1'b0) | (grp_update_knn_fu_734_ap_done == 1'b0));
end

assign grp_knn_vote_fu_670_ap_start = grp_knn_vote_fu_670_ap_start_reg;

assign grp_update_knn_fu_734_ap_start = grp_update_knn_fu_734_ap_start_reg;

assign grp_update_knn_fu_752_ap_start = grp_update_knn_fu_752_ap_start_reg;

assign grp_update_knn_fu_770_ap_start = grp_update_knn_fu_770_ap_start_reg;

assign grp_update_knn_fu_788_ap_start = grp_update_knn_fu_788_ap_start_reg;

assign grp_update_knn_fu_806_ap_start = grp_update_knn_fu_806_ap_start_reg;

assign grp_update_knn_fu_824_ap_start = grp_update_knn_fu_824_ap_start_reg;

assign grp_update_knn_fu_842_ap_start = grp_update_knn_fu_842_ap_start_reg;

assign grp_update_knn_fu_861_ap_start = grp_update_knn_fu_861_ap_start_reg;

assign grp_update_knn_fu_879_ap_start = grp_update_knn_fu_879_ap_start_reg;

assign grp_update_knn_fu_897_ap_start = grp_update_knn_fu_897_ap_start_reg;

assign i_4_fu_1605_p2 = (i4_0_reg_659 + 11'd1);

assign i_fu_1011_p2 = (i_0_reg_336 + 4'd1);

assign icmp_ln51_fu_1005_p2 = ((i_0_reg_336 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1017_p2 = ((k_0_reg_348 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_1599_p2 = ((i4_0_reg_659 == 11'd1800) ? 1'b1 : 1'b0);

assign k_fu_1023_p2 = (k_0_reg_348 + 2'd1);

assign training_data_V_0_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_1_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_2_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_3_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_4_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_5_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_6_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_7_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_8_address0 = zext_ln61_fu_1611_p1;

assign training_data_V_9_address0 = zext_ln61_fu_1611_p1;

assign zext_ln61_fu_1611_p1 = i4_0_reg_659;

assign zext_ln63_1_fu_1630_p1 = training_data_V_1_q0;

assign zext_ln63_2_fu_1635_p1 = training_data_V_2_q0;

assign zext_ln63_3_fu_1640_p1 = training_data_V_3_q0;

assign zext_ln63_4_fu_1645_p1 = training_data_V_4_q0;

assign zext_ln63_5_fu_1650_p1 = training_data_V_5_q0;

assign zext_ln63_6_fu_1655_p1 = training_data_V_7_q0;

assign zext_ln63_7_fu_1660_p1 = training_data_V_8_q0;

assign zext_ln63_8_fu_1665_p1 = training_data_V_9_q0;

assign zext_ln63_fu_1625_p1 = training_data_V_0_q0;

always @ (posedge ap_clk) begin
    zext_ln63_reg_2208[47:46] <= 2'b00;
    zext_ln63_1_reg_2213[47:46] <= 2'b00;
    zext_ln63_2_reg_2218[47] <= 1'b0;
    zext_ln63_3_reg_2223[47] <= 1'b0;
    zext_ln63_4_reg_2228[47:46] <= 2'b00;
    zext_ln63_5_reg_2233[47:45] <= 3'b000;
    zext_ln63_6_reg_2243[47:42] <= 6'b000000;
    zext_ln63_7_reg_2248[47:45] <= 3'b000;
    zext_ln63_8_reg_2253[47:41] <= 7'b0000000;
end

endmodule //digitrec
