

================================================================
== Vivado HLS Report for 'update_knn'
================================================================
* Date:           Wed Oct  2 02:44:59 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        digitrec.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 4.968 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       53|       53| 0.530 us | 0.530 us |   53|   53|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- popcount    |       49|       49|         1|          -|          -|    49|    no    |
        |- search_max  |        2|        2|         1|          -|          -|     2|    no    |
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%min_distances_2_V_r_3 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %min_distances_2_V_r)"   --->   Operation 4 'read' 'min_distances_2_V_r_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%min_distances_2_V_r_4 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %min_distances_2_V_r_2)"   --->   Operation 5 'read' 'min_distances_2_V_r_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%min_distances_1_V_r_3 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %min_distances_1_V_r)"   --->   Operation 6 'read' 'min_distances_1_V_r_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%min_distances_1_V_r_4 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %min_distances_1_V_r_2)"   --->   Operation 7 'read' 'min_distances_1_V_r_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%min_distances_0_V_r_3 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %min_distances_0_V_r)"   --->   Operation 8 'read' 'min_distances_0_V_r_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%min_distances_0_V_r_4 = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %min_distances_0_V_r_2)"   --->   Operation 9 'read' 'min_distances_0_V_r_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%train_inst_V_read = call i48 @_ssdm_op_Read.ap_auto.i48(i48 %train_inst_V)"   --->   Operation 10 'read' 'train_inst_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%test_inst_V_read = call i49 @_ssdm_op_Read.ap_auto.i49(i49 %test_inst_V)"   --->   Operation 11 'read' 'test_inst_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%train_inst_V_cast = zext i48 %train_inst_V_read to i49"   --->   Operation 12 'zext' 'train_inst_V_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.02ns)   --->   "%ret_V = xor i49 %train_inst_V_cast, %test_inst_V_read" [digitrec.cpp:86]   --->   Operation 13 'xor' 'ret_V' <Predicate = true> <Delay = 1.02> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (1.76ns)   --->   "br label %1" [digitrec.cpp:89]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%min_distances_0_V_0 = phi i6 [ 0, %0 ], [ %dist_V, %2 ]"   --->   Operation 15 'phi' 'min_distances_0_V_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%bvh_d_index = phi i6 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 16 'phi' 'bvh_d_index' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i6 %bvh_d_index to i32" [digitrec.cpp:89]   --->   Operation 17 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.42ns)   --->   "%icmp_ln89 = icmp eq i6 %bvh_d_index, -15" [digitrec.cpp:89]   --->   Operation 18 'icmp' 'icmp_ln89' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.82ns)   --->   "%i = add i6 %bvh_d_index, 1" [digitrec.cpp:89]   --->   Operation 20 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %icmp_ln89, label %.preheader.preheader, label %2" [digitrec.cpp:89]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str4) nounwind" [digitrec.cpp:89]   --->   Operation 22 'specloopname' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i49.i32(i49 %ret_V, i32 %zext_ln89)" [digitrec.cpp:90]   --->   Operation 23 'bitselect' 'p_Result_s' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln700 = zext i1 %p_Result_s to i6" [digitrec.cpp:90]   --->   Operation 24 'zext' 'zext_ln700' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.82ns)   --->   "%dist_V = add i6 %zext_ln700, %min_distances_0_V_0" [digitrec.cpp:90]   --->   Operation 25 'add' 'dist_V' <Predicate = (!icmp_ln89)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br label %1" [digitrec.cpp:89]   --->   Operation 26 'br' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.76ns)   --->   "br label %.preheader" [digitrec.cpp:96]   --->   Operation 27 'br' <Predicate = (icmp_ln89)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 4.96>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%p_032_0 = phi i4 [ %select_ln96, %branch3_ifconv ], [ 0, %.preheader.preheader ]" [digitrec.cpp:96]   --->   Operation 28 'phi' 'p_032_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%val_assign = phi i2 [ %i_1, %branch3_ifconv ], [ 1, %.preheader.preheader ]"   --->   Operation 29 'phi' 'val_assign' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.95ns)   --->   "%icmp_ln95 = icmp eq i2 %val_assign, -1" [digitrec.cpp:95]   --->   Operation 30 'icmp' 'icmp_ln95' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 31 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln95, label %branch1, label %branch3_ifconv" [digitrec.cpp:95]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str5) nounwind" [digitrec.cpp:95]   --->   Operation 33 'specloopname' <Predicate = (!icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.95ns)   --->   "%icmp_ln895_2 = icmp eq i2 %val_assign, 1" [digitrec.cpp:96]   --->   Operation 34 'icmp' 'icmp_ln895_2' <Predicate = (!icmp_ln95)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln895_1)   --->   "%select_ln895 = select i1 %icmp_ln895_2, i6 %min_distances_1_V_r_3, i6 %min_distances_2_V_r_3" [digitrec.cpp:96]   --->   Operation 35 'select' 'select_ln895' <Predicate = (!icmp_ln95)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln895_1 = trunc i4 %p_032_0 to i2" [digitrec.cpp:96]   --->   Operation 36 'trunc' 'trunc_ln895_1' <Predicate = (!icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.77ns)   --->   "%tmp_1 = call i6 @_ssdm_op_Mux.ap_auto.3i6.i2(i6 %min_distances_0_V_r_3, i6 %min_distances_1_V_r_3, i6 %min_distances_2_V_r_3, i2 %trunc_ln895_1)" [digitrec.cpp:96]   --->   Operation 37 'mux' 'tmp_1' <Predicate = (!icmp_ln95)> <Delay = 1.77> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (1.42ns) (out node of the LUT)   --->   "%icmp_ln895_1 = icmp ugt i6 %select_ln895, %tmp_1" [digitrec.cpp:96]   --->   Operation 38 'icmp' 'icmp_ln895_1' <Predicate = (!icmp_ln95)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%max_idx_V = zext i2 %val_assign to i4" [digitrec.cpp:96]   --->   Operation 39 'zext' 'max_idx_V' <Predicate = (!icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.02ns)   --->   "%select_ln96 = select i1 %icmp_ln895_1, i4 %max_idx_V, i4 %p_032_0" [digitrec.cpp:96]   --->   Operation 40 'select' 'select_ln96' <Predicate = (!icmp_ln95)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (1.56ns)   --->   "%i_1 = add i2 1, %val_assign" [digitrec.cpp:95]   --->   Operation 41 'add' 'i_1' <Predicate = (!icmp_ln95)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "br label %.preheader" [digitrec.cpp:95]   --->   Operation 42 'br' <Predicate = (!icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%trunc_ln895 = trunc i4 %p_032_0 to i2" [digitrec.cpp:100]   --->   Operation 43 'trunc' 'trunc_ln895' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (1.77ns)   --->   "%tmp = call i6 @_ssdm_op_Mux.ap_auto.3i6.i2(i6 %min_distances_0_V_r_3, i6 %min_distances_1_V_r_3, i6 %min_distances_2_V_r_3, i2 %trunc_ln895)" [digitrec.cpp:100]   --->   Operation 44 'mux' 'tmp' <Predicate = (icmp_ln95)> <Delay = 1.77> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (1.42ns)   --->   "%icmp_ln895 = icmp ugt i6 %tmp, %min_distances_0_V_0" [digitrec.cpp:100]   --->   Operation 45 'icmp' 'icmp_ln895' <Predicate = (icmp_ln95)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (1.76ns)   --->   "br i1 %icmp_ln895, label %branch0, label %._crit_edge" [digitrec.cpp:100]   --->   Operation 46 'br' <Predicate = (icmp_ln95)> <Delay = 1.76>
ST_3 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node select_ln100)   --->   "%write_flag_1 = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 true, i1 false, i1 false, i1 false, i2 %trunc_ln895)" [digitrec.cpp:100]   --->   Operation 47 'mux' 'write_flag_1' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 0.00> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln100_2)   --->   "%write_flag7_1 = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 false, i1 false, i1 true, i1 true, i2 %trunc_ln895)" [digitrec.cpp:100]   --->   Operation 48 'mux' 'write_flag7_1' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 0.00> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln100_1)   --->   "%write_flag4_1 = call i1 @_ssdm_op_Mux.ap_auto.4i1.i2(i1 false, i1 true, i1 false, i1 false, i2 %trunc_ln895)" [digitrec.cpp:100]   --->   Operation 49 'mux' 'write_flag4_1' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 0.00> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (1.95ns) (out node of the LUT)   --->   "%select_ln100 = select i1 %write_flag_1, i6 %min_distances_0_V_0, i6 %min_distances_0_V_r_4" [digitrec.cpp:100]   --->   Operation 50 'select' 'select_ln100' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 1.95> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (1.95ns) (out node of the LUT)   --->   "%select_ln100_1 = select i1 %write_flag4_1, i6 %min_distances_0_V_0, i6 %min_distances_1_V_r_4" [digitrec.cpp:100]   --->   Operation 51 'select' 'select_ln100_1' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 1.95> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (1.95ns) (out node of the LUT)   --->   "%select_ln100_2 = select i1 %write_flag7_1, i6 %min_distances_0_V_0, i6 %min_distances_2_V_r_4" [digitrec.cpp:100]   --->   Operation 52 'select' 'select_ln100_2' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 1.95> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (1.76ns)   --->   "br label %._crit_edge" [digitrec.cpp:100]   --->   Operation 53 'br' <Predicate = (icmp_ln95 & icmp_ln895)> <Delay = 1.76>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%phi_ln101 = phi i6 [ %select_ln100_1, %branch0 ], [ %min_distances_1_V_r_4, %branch1 ]" [digitrec.cpp:101]   --->   Operation 54 'phi' 'phi_ln101' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%phi_ln101_1 = phi i6 [ %select_ln100_2, %branch0 ], [ %min_distances_2_V_r_4, %branch1 ]" [digitrec.cpp:101]   --->   Operation 55 'phi' 'phi_ln101_1' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%phi_ln101_2 = phi i6 [ %select_ln100, %branch0 ], [ %min_distances_0_V_r_4, %branch1 ]" [digitrec.cpp:101]   --->   Operation 56 'phi' 'phi_ln101_2' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i6, i6, i6 } undef, i6 %phi_ln101_2, 0" [digitrec.cpp:101]   --->   Operation 57 'insertvalue' 'mrv' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i6, i6, i6 } %mrv, i6 %phi_ln101, 1" [digitrec.cpp:101]   --->   Operation 58 'insertvalue' 'mrv_1' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i6, i6, i6 } %mrv_1, i6 %phi_ln101_1, 2" [digitrec.cpp:101]   --->   Operation 59 'insertvalue' 'mrv_2' <Predicate = (icmp_ln95)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "ret { i6, i6, i6 } %mrv_2" [digitrec.cpp:101]   --->   Operation 60 'ret' <Predicate = (icmp_ln95)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('dist.V') with incoming values : ('dist.V', digitrec.cpp:90) [21]  (1.77 ns)

 <State 2>: 1.83ns
The critical path consists of the following:
	'phi' operation ('dist.V') with incoming values : ('dist.V', digitrec.cpp:90) [21]  (0 ns)
	'add' operation ('dist.V', digitrec.cpp:90) [32]  (1.83 ns)

 <State 3>: 4.97ns
The critical path consists of the following:
	'phi' operation ('p_032_0', digitrec.cpp:96) with incoming values : ('select_ln96', digitrec.cpp:96) [37]  (0 ns)
	'mux' operation ('tmp', digitrec.cpp:100) [55]  (1.77 ns)
	'icmp' operation ('icmp_ln895', digitrec.cpp:100) [56]  (1.43 ns)
	multiplexor before 'phi' operation ('min_distances[1].V', digitrec.cpp:101) with incoming values : ('min_distances[1].V') ('select_ln100_1', digitrec.cpp:100) [67]  (1.77 ns)
	'phi' operation ('min_distances[1].V', digitrec.cpp:101) with incoming values : ('min_distances[1].V') ('select_ln100_1', digitrec.cpp:100) [67]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
