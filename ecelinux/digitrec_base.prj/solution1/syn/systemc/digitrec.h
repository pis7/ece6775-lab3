// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _digitrec_HH_
#define _digitrec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "knn_vote.h"
#include "digitrec_trainingdEe.h"
#include "digitrec_knn_set_V.h"

namespace ap_rtl {

struct digitrec : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<49> > input_V;
    sc_out< sc_lv<4> > ap_return;
    sc_signal< sc_lv<6> > ap_var_for_const0;


    // Module declarations
    digitrec(sc_module_name name);
    SC_HAS_PROCESS(digitrec);

    ~digitrec();

    sc_trace_file* mVcdFile;

    digitrec_trainingdEe* training_data_V_U;
    digitrec_knn_set_V* knn_set_V_U;
    knn_vote* grp_knn_vote_fu_237;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > training_data_V_address0;
    sc_signal< sc_logic > training_data_V_ce0;
    sc_signal< sc_lv<48> > training_data_V_q0;
    sc_signal< sc_lv<4> > i_fu_248_p2;
    sc_signal< sc_lv<4> > i_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > sub_ln321_fu_266_p2;
    sc_signal< sc_lv<6> > sub_ln321_reg_493;
    sc_signal< sc_lv<1> > icmp_ln51_fu_242_p2;
    sc_signal< sc_lv<2> > k_fu_278_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > i_3_fu_304_p2;
    sc_signal< sc_lv<11> > i_3_reg_509;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<15> > zext_ln59_fu_310_p1;
    sc_signal< sc_lv<15> > zext_ln59_reg_514;
    sc_signal< sc_lv<1> > icmp_ln57_fu_298_p2;
    sc_signal< sc_lv<15> > add_ln59_fu_314_p2;
    sc_signal< sc_lv<15> > add_ln59_reg_519;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > j_fu_326_p2;
    sc_signal< sc_lv<4> > j_reg_527;
    sc_signal< sc_lv<1> > icmp_ln59_fu_320_p2;
    sc_signal< sc_lv<6> > sub_ln895_fu_354_p2;
    sc_signal< sc_lv<6> > sub_ln895_reg_537;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<49> > ret_V_fu_364_p2;
    sc_signal< sc_lv<49> > ret_V_reg_544;
    sc_signal< sc_lv<6> > i_4_fu_379_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > dist_V_fu_396_p2;
    sc_signal< sc_lv<1> > icmp_ln89_fu_373_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln95_fu_402_p2;
    sc_signal< sc_lv<5> > knn_set_V_addr_1_reg_575;
    sc_signal< sc_lv<4> > select_ln96_fu_460_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<2> > i_5_fu_468_p2;
    sc_signal< sc_lv<5> > knn_set_V_address0;
    sc_signal< sc_logic > knn_set_V_ce0;
    sc_signal< sc_logic > knn_set_V_we0;
    sc_signal< sc_lv<6> > knn_set_V_q0;
    sc_signal< sc_lv<5> > knn_set_V_address1;
    sc_signal< sc_logic > knn_set_V_ce1;
    sc_signal< sc_logic > knn_set_V_we1;
    sc_signal< sc_lv<6> > knn_set_V_q1;
    sc_signal< sc_logic > grp_knn_vote_fu_237_ap_start;
    sc_signal< sc_logic > grp_knn_vote_fu_237_ap_done;
    sc_signal< sc_logic > grp_knn_vote_fu_237_ap_idle;
    sc_signal< sc_logic > grp_knn_vote_fu_237_ap_ready;
    sc_signal< sc_lv<5> > grp_knn_vote_fu_237_knn_set_V_address0;
    sc_signal< sc_logic > grp_knn_vote_fu_237_knn_set_V_ce0;
    sc_signal< sc_lv<4> > grp_knn_vote_fu_237_ap_return;
    sc_signal< sc_lv<4> > i_0_reg_133;
    sc_signal< sc_lv<1> > icmp_ln52_fu_272_p2;
    sc_signal< sc_lv<2> > k_0_reg_144;
    sc_signal< sc_lv<11> > i4_0_reg_155;
    sc_signal< sc_lv<4> > j_0_reg_166;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<15> > phi_mul_reg_178;
    sc_signal< sc_lv<6> > p_053_0_i_reg_189;
    sc_signal< sc_lv<6> > bvh_d_index_reg_202;
    sc_signal< sc_lv<4> > p_032_0_i_reg_213;
    sc_signal< sc_lv<2> > val_assign_reg_225;
    sc_signal< sc_logic > grp_knn_vote_fu_237_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > sext_ln321_fu_293_p1;
    sc_signal< sc_lv<64> > zext_ln61_1_fu_337_p1;
    sc_signal< sc_lv<64> > sext_ln895_1_fu_417_p1;
    sc_signal< sc_lv<64> > sext_ln895_2_fu_431_p1;
    sc_signal< sc_lv<64> > sext_ln895_fu_445_p1;
    sc_signal< sc_lv<1> > icmp_ln895_fu_474_p2;
    sc_signal< sc_lv<6> > tmp_3_fu_258_p3;
    sc_signal< sc_lv<6> > zext_ln321_fu_254_p1;
    sc_signal< sc_lv<6> > zext_ln321_2_fu_284_p1;
    sc_signal< sc_lv<6> > add_ln321_fu_288_p2;
    sc_signal< sc_lv<15> > add_ln61_fu_332_p2;
    sc_signal< sc_lv<6> > tmp_4_fu_346_p3;
    sc_signal< sc_lv<6> > zext_ln61_fu_342_p1;
    sc_signal< sc_lv<49> > zext_ln61_2_fu_360_p1;
    sc_signal< sc_lv<32> > zext_ln89_fu_369_p1;
    sc_signal< sc_lv<1> > p_Result_s_fu_385_p3;
    sc_signal< sc_lv<6> > zext_ln700_fu_392_p1;
    sc_signal< sc_lv<6> > zext_ln895_1_fu_408_p1;
    sc_signal< sc_lv<6> > add_ln895_1_fu_412_p2;
    sc_signal< sc_lv<6> > zext_ln895_2_fu_422_p1;
    sc_signal< sc_lv<6> > add_ln895_2_fu_426_p2;
    sc_signal< sc_lv<6> > zext_ln895_fu_436_p1;
    sc_signal< sc_lv<6> > add_ln895_fu_440_p2;
    sc_signal< sc_lv<1> > icmp_ln895_2_fu_450_p2;
    sc_signal< sc_lv<4> > max_idx_V_fu_456_p1;
    sc_signal< sc_lv<4> > ap_return_preg;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<11> ap_const_lv11_708;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<15> ap_const_lv15_708;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln321_fu_288_p2();
    void thread_add_ln59_fu_314_p2();
    void thread_add_ln61_fu_332_p2();
    void thread_add_ln895_1_fu_412_p2();
    void thread_add_ln895_2_fu_426_p2();
    void thread_add_ln895_fu_440_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_dist_V_fu_396_p2();
    void thread_grp_knn_vote_fu_237_ap_start();
    void thread_i_3_fu_304_p2();
    void thread_i_4_fu_379_p2();
    void thread_i_5_fu_468_p2();
    void thread_i_fu_248_p2();
    void thread_icmp_ln51_fu_242_p2();
    void thread_icmp_ln52_fu_272_p2();
    void thread_icmp_ln57_fu_298_p2();
    void thread_icmp_ln59_fu_320_p2();
    void thread_icmp_ln895_2_fu_450_p2();
    void thread_icmp_ln895_fu_474_p2();
    void thread_icmp_ln89_fu_373_p2();
    void thread_icmp_ln95_fu_402_p2();
    void thread_j_fu_326_p2();
    void thread_k_fu_278_p2();
    void thread_knn_set_V_address0();
    void thread_knn_set_V_address1();
    void thread_knn_set_V_ce0();
    void thread_knn_set_V_ce1();
    void thread_knn_set_V_we0();
    void thread_knn_set_V_we1();
    void thread_max_idx_V_fu_456_p1();
    void thread_p_Result_s_fu_385_p3();
    void thread_ret_V_fu_364_p2();
    void thread_select_ln96_fu_460_p3();
    void thread_sext_ln321_fu_293_p1();
    void thread_sext_ln895_1_fu_417_p1();
    void thread_sext_ln895_2_fu_431_p1();
    void thread_sext_ln895_fu_445_p1();
    void thread_sub_ln321_fu_266_p2();
    void thread_sub_ln895_fu_354_p2();
    void thread_tmp_3_fu_258_p3();
    void thread_tmp_4_fu_346_p3();
    void thread_training_data_V_address0();
    void thread_training_data_V_ce0();
    void thread_zext_ln321_2_fu_284_p1();
    void thread_zext_ln321_fu_254_p1();
    void thread_zext_ln59_fu_310_p1();
    void thread_zext_ln61_1_fu_337_p1();
    void thread_zext_ln61_2_fu_360_p1();
    void thread_zext_ln61_fu_342_p1();
    void thread_zext_ln700_fu_392_p1();
    void thread_zext_ln895_1_fu_408_p1();
    void thread_zext_ln895_2_fu_422_p1();
    void thread_zext_ln895_fu_436_p1();
    void thread_zext_ln89_fu_369_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
