// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module digitrec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [48:0] input_V;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] training_data_V_address0;
reg    training_data_V_ce0;
wire   [47:0] training_data_V_q0;
wire   [3:0] i_fu_248_p2;
reg   [3:0] i_reg_488;
wire    ap_CS_fsm_state2;
wire   [5:0] sub_ln321_fu_266_p2;
reg   [5:0] sub_ln321_reg_493;
wire   [0:0] icmp_ln51_fu_242_p2;
wire   [1:0] k_fu_278_p2;
wire    ap_CS_fsm_state3;
wire   [10:0] i_3_fu_304_p2;
reg   [10:0] i_3_reg_509;
wire    ap_CS_fsm_state4;
wire   [14:0] zext_ln59_fu_310_p1;
reg   [14:0] zext_ln59_reg_514;
wire   [0:0] icmp_ln57_fu_298_p2;
wire   [14:0] add_ln59_fu_314_p2;
reg   [14:0] add_ln59_reg_519;
wire    ap_CS_fsm_state5;
wire   [3:0] j_fu_326_p2;
reg   [3:0] j_reg_527;
wire   [0:0] icmp_ln59_fu_320_p2;
wire   [5:0] sub_ln895_fu_354_p2;
reg   [5:0] sub_ln895_reg_537;
wire    ap_CS_fsm_state6;
wire   [48:0] ret_V_fu_364_p2;
reg   [48:0] ret_V_reg_544;
wire   [5:0] i_4_fu_379_p2;
wire    ap_CS_fsm_state7;
wire   [5:0] dist_V_fu_396_p2;
wire   [0:0] icmp_ln89_fu_373_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln95_fu_402_p2;
reg   [4:0] knn_set_V_addr_1_reg_575;
wire   [3:0] select_ln96_fu_460_p3;
wire    ap_CS_fsm_state9;
wire   [1:0] i_5_fu_468_p2;
reg   [4:0] knn_set_V_address0;
reg    knn_set_V_ce0;
reg    knn_set_V_we0;
wire   [5:0] knn_set_V_q0;
reg   [4:0] knn_set_V_address1;
reg    knn_set_V_ce1;
reg    knn_set_V_we1;
wire   [5:0] knn_set_V_q1;
wire    grp_knn_vote_fu_237_ap_start;
wire    grp_knn_vote_fu_237_ap_done;
wire    grp_knn_vote_fu_237_ap_idle;
wire    grp_knn_vote_fu_237_ap_ready;
wire   [4:0] grp_knn_vote_fu_237_knn_set_V_address0;
wire    grp_knn_vote_fu_237_knn_set_V_ce0;
wire   [3:0] grp_knn_vote_fu_237_ap_return;
reg   [3:0] i_0_reg_133;
wire   [0:0] icmp_ln52_fu_272_p2;
reg   [1:0] k_0_reg_144;
reg   [10:0] i4_0_reg_155;
reg   [3:0] j_0_reg_166;
wire    ap_CS_fsm_state10;
reg   [14:0] phi_mul_reg_178;
reg   [5:0] p_053_0_i_reg_189;
reg   [5:0] bvh_d_index_reg_202;
reg   [3:0] p_032_0_i_reg_213;
reg   [1:0] val_assign_reg_225;
reg    grp_knn_vote_fu_237_ap_start_reg;
wire    ap_CS_fsm_state11;
wire  signed [63:0] sext_ln321_fu_293_p1;
wire   [63:0] zext_ln61_1_fu_337_p1;
wire  signed [63:0] sext_ln895_1_fu_417_p1;
wire  signed [63:0] sext_ln895_2_fu_431_p1;
wire  signed [63:0] sext_ln895_fu_445_p1;
wire   [0:0] icmp_ln895_fu_474_p2;
wire   [5:0] tmp_3_fu_258_p3;
wire   [5:0] zext_ln321_fu_254_p1;
wire   [5:0] zext_ln321_2_fu_284_p1;
wire   [5:0] add_ln321_fu_288_p2;
wire   [14:0] add_ln61_fu_332_p2;
wire   [5:0] tmp_4_fu_346_p3;
wire   [5:0] zext_ln61_fu_342_p1;
wire   [48:0] zext_ln61_2_fu_360_p1;
wire   [31:0] zext_ln89_fu_369_p1;
wire   [0:0] p_Result_s_fu_385_p3;
wire   [5:0] zext_ln700_fu_392_p1;
wire   [5:0] zext_ln895_1_fu_408_p1;
wire   [5:0] add_ln895_1_fu_412_p2;
wire   [5:0] zext_ln895_2_fu_422_p1;
wire   [5:0] add_ln895_2_fu_426_p2;
wire   [5:0] zext_ln895_fu_436_p1;
wire   [5:0] add_ln895_fu_440_p2;
wire   [0:0] icmp_ln895_2_fu_450_p2;
wire   [3:0] max_idx_V_fu_456_p1;
reg   [3:0] ap_return_preg;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_knn_vote_fu_237_ap_start_reg = 1'b0;
#0 ap_return_preg = 4'd0;
end

digitrec_trainingdEe #(
    .DataWidth( 48 ),
    .AddressRange( 18000 ),
    .AddressWidth( 15 ))
training_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_address0),
    .ce0(training_data_V_ce0),
    .q0(training_data_V_q0)
);

digitrec_knn_set_V #(
    .DataWidth( 6 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
knn_set_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(knn_set_V_address0),
    .ce0(knn_set_V_ce0),
    .we0(knn_set_V_we0),
    .d0(6'd50),
    .q0(knn_set_V_q0),
    .address1(knn_set_V_address1),
    .ce1(knn_set_V_ce1),
    .we1(knn_set_V_we1),
    .d1(p_053_0_i_reg_189),
    .q1(knn_set_V_q1)
);

knn_vote grp_knn_vote_fu_237(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_knn_vote_fu_237_ap_start),
    .ap_done(grp_knn_vote_fu_237_ap_done),
    .ap_idle(grp_knn_vote_fu_237_ap_idle),
    .ap_ready(grp_knn_vote_fu_237_ap_ready),
    .knn_set_V_address0(grp_knn_vote_fu_237_knn_set_V_address0),
    .knn_set_V_ce0(grp_knn_vote_fu_237_knn_set_V_ce0),
    .knn_set_V_q0(knn_set_V_q0),
    .ap_return(grp_knn_vote_fu_237_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (grp_knn_vote_fu_237_ap_done == 1'b1))) begin
            ap_return_preg <= grp_knn_vote_fu_237_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_knn_vote_fu_237_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln57_fu_298_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            grp_knn_vote_fu_237_ap_start_reg <= 1'b1;
        end else if ((grp_knn_vote_fu_237_ap_ready == 1'b1)) begin
            grp_knn_vote_fu_237_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_373_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        bvh_d_index_reg_202 <= i_4_fu_379_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bvh_d_index_reg_202 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i4_0_reg_155 <= 11'd0;
    end else if (((icmp_ln59_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i4_0_reg_155 <= i_3_reg_509;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_272_p2 == 1'd1))) begin
        i_0_reg_133 <= i_reg_488;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_133 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_0_reg_166 <= j_reg_527;
    end else if (((icmp_ln57_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_0_reg_166 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_0_reg_144 <= 2'd0;
    end else if (((icmp_ln52_fu_272_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        k_0_reg_144 <= k_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln89_fu_373_p2 == 1'd1))) begin
        p_032_0_i_reg_213 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        p_032_0_i_reg_213 <= select_ln96_fu_460_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_373_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        p_053_0_i_reg_189 <= dist_V_fu_396_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_053_0_i_reg_189 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        phi_mul_reg_178 <= add_ln59_reg_519;
    end else if (((icmp_ln57_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_178 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln89_fu_373_p2 == 1'd1))) begin
        val_assign_reg_225 <= 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        val_assign_reg_225 <= i_5_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln59_reg_519 <= add_ln59_fu_314_p2;
        j_reg_527 <= j_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_3_reg_509 <= i_3_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_488 <= i_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln95_fu_402_p2 == 1'd1))) begin
        knn_set_V_addr_1_reg_575 <= sext_ln895_fu_445_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ret_V_reg_544 <= ret_V_fu_364_p2;
        sub_ln895_reg_537 <= sub_ln895_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln51_fu_242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_ln321_reg_493 <= sub_ln321_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        zext_ln59_reg_514[10 : 0] <= zext_ln59_fu_310_p1[10 : 0];
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (grp_knn_vote_fu_237_ap_done == 1'b1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_knn_vote_fu_237_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_knn_vote_fu_237_ap_done == 1'b1))) begin
        ap_return = grp_knn_vote_fu_237_ap_return;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln95_fu_402_p2 == 1'd1))) begin
        knn_set_V_address0 = sext_ln895_fu_445_p1;
    end else if (((icmp_ln95_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        knn_set_V_address0 = sext_ln895_1_fu_417_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        knn_set_V_address0 = sext_ln321_fu_293_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        knn_set_V_address0 = grp_knn_vote_fu_237_knn_set_V_address0;
    end else begin
        knn_set_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        knn_set_V_address1 = knn_set_V_addr_1_reg_575;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        knn_set_V_address1 = sext_ln895_2_fu_431_p1;
    end else begin
        knn_set_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state8) & (icmp_ln95_fu_402_p2 == 1'd1)) | ((icmp_ln95_fu_402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        knn_set_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        knn_set_V_ce0 = grp_knn_vote_fu_237_knn_set_V_ce0;
    end else begin
        knn_set_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        knn_set_V_ce1 = 1'b1;
    end else begin
        knn_set_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_272_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        knn_set_V_we0 = 1'b1;
    end else begin
        knn_set_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln895_fu_474_p2 == 1'd1))) begin
        knn_set_V_we1 = 1'b1;
    end else begin
        knn_set_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        training_data_V_ce0 = 1'b1;
    end else begin
        training_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln51_fu_242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln52_fu_272_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln57_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln59_fu_320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln89_fu_373_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln95_fu_402_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_knn_vote_fu_237_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln321_fu_288_p2 = (sub_ln321_reg_493 + zext_ln321_2_fu_284_p1);

assign add_ln59_fu_314_p2 = (phi_mul_reg_178 + 15'd1800);

assign add_ln61_fu_332_p2 = (phi_mul_reg_178 + zext_ln59_reg_514);

assign add_ln895_1_fu_412_p2 = (sub_ln895_reg_537 + zext_ln895_1_fu_408_p1);

assign add_ln895_2_fu_426_p2 = (sub_ln895_reg_537 + zext_ln895_2_fu_422_p1);

assign add_ln895_fu_440_p2 = (sub_ln895_reg_537 + zext_ln895_fu_436_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign dist_V_fu_396_p2 = (zext_ln700_fu_392_p1 + p_053_0_i_reg_189);

assign grp_knn_vote_fu_237_ap_start = grp_knn_vote_fu_237_ap_start_reg;

assign i_3_fu_304_p2 = (i4_0_reg_155 + 11'd1);

assign i_4_fu_379_p2 = (bvh_d_index_reg_202 + 6'd1);

assign i_5_fu_468_p2 = (val_assign_reg_225 + 2'd1);

assign i_fu_248_p2 = (i_0_reg_133 + 4'd1);

assign icmp_ln51_fu_242_p2 = ((i_0_reg_133 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_272_p2 = ((k_0_reg_144 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_298_p2 = ((i4_0_reg_155 == 11'd1800) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_320_p2 = ((j_0_reg_166 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_450_p2 = ((knn_set_V_q0 > knn_set_V_q1) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_474_p2 = ((knn_set_V_q0 > p_053_0_i_reg_189) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_373_p2 = ((bvh_d_index_reg_202 == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_402_p2 = ((val_assign_reg_225 == 2'd3) ? 1'b1 : 1'b0);

assign j_fu_326_p2 = (j_0_reg_166 + 4'd1);

assign k_fu_278_p2 = (k_0_reg_144 + 2'd1);

assign max_idx_V_fu_456_p1 = val_assign_reg_225;

assign p_Result_s_fu_385_p3 = ret_V_reg_544[zext_ln89_fu_369_p1];

assign ret_V_fu_364_p2 = (zext_ln61_2_fu_360_p1 ^ input_V);

assign select_ln96_fu_460_p3 = ((icmp_ln895_2_fu_450_p2[0:0] === 1'b1) ? max_idx_V_fu_456_p1 : p_032_0_i_reg_213);

assign sext_ln321_fu_293_p1 = $signed(add_ln321_fu_288_p2);

assign sext_ln895_1_fu_417_p1 = $signed(add_ln895_1_fu_412_p2);

assign sext_ln895_2_fu_431_p1 = $signed(add_ln895_2_fu_426_p2);

assign sext_ln895_fu_445_p1 = $signed(add_ln895_fu_440_p2);

assign sub_ln321_fu_266_p2 = (tmp_3_fu_258_p3 - zext_ln321_fu_254_p1);

assign sub_ln895_fu_354_p2 = (tmp_4_fu_346_p3 - zext_ln61_fu_342_p1);

assign tmp_3_fu_258_p3 = {{i_0_reg_133}, {2'd0}};

assign tmp_4_fu_346_p3 = {{j_0_reg_166}, {2'd0}};

assign training_data_V_address0 = zext_ln61_1_fu_337_p1;

assign zext_ln321_2_fu_284_p1 = k_0_reg_144;

assign zext_ln321_fu_254_p1 = i_0_reg_133;

assign zext_ln59_fu_310_p1 = i4_0_reg_155;

assign zext_ln61_1_fu_337_p1 = add_ln61_fu_332_p2;

assign zext_ln61_2_fu_360_p1 = training_data_V_q0;

assign zext_ln61_fu_342_p1 = j_0_reg_166;

assign zext_ln700_fu_392_p1 = p_Result_s_fu_385_p3;

assign zext_ln895_1_fu_408_p1 = val_assign_reg_225;

assign zext_ln895_2_fu_422_p1 = p_032_0_i_reg_213;

assign zext_ln895_fu_436_p1 = p_032_0_i_reg_213;

assign zext_ln89_fu_369_p1 = bvh_d_index_reg_202;

always @ (posedge ap_clk) begin
    zext_ln59_reg_514[14:11] <= 4'b0000;
end

endmodule //digitrec
